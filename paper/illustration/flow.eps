%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 699.000000 137.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 699 137
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 699 137
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /p put
dup 34 /k put
dup 35 /t put
dup 36 /one put
dup 37 /two put
dup 38 /three put
dup 39 /four put
dup 40 /five put
dup 41 /six put
dup 42 /zero put
dup 43 /s put
dup 44 /r put
dup 45 /c put
dup 46 /I put
dup 47 /P put
dup 48 /underscore put
dup 49 /space put
dup 50 /d put
dup 51 /o put
dup 52 /greater put
dup 53 /e put
dup 54 /n put
dup 55 /i put
dup 56 /g put
dup 57 /T put
dup 58 /a put
dup 59 /uniFB03 put
dup 60 /R put
dup 61 /l put
dup 62 /w put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<









00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/greater 9 def
/I 10 def
/P 11 def
/R 12 def
/T 13 def
/underscore 14 def
/a 15 def
/c 16 def
/d 17 def
/e 18 def
/g 19 def
/i 20 def
/k 21 def
/l 22 def
/n 23 def
/o 24 def
/p 25 def
/r 26 def
/s 27 def
/t 28 def
/w 29 def
/uniFB03 30 def
/uni2B91 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C1729802DA479E44F824526137EEB725F9A8277E11FB440D7432A2FB2F8DA2BCCD532B90735191BAC4AF35F550E035C4C8C1BAC2797ED4C005EE32CFA64F85F936DA558E85ADDE29C5BBD37B214925B66C7387D4ED9E34B32E933290F9BF9E8BCFACC0336E579226C4D17A32B58415AD44B16F4CB709A0F3B01AAEE3F68C62EEAB5478B72975B6DB3132F1DF7D7A35496045D4C7725F68F9357E45E1F4E3334B498C7F9A204582DA24CF87FC4826FB45BF658DCE8A48A3B9AC8C759C8456A7FE957D5EE47365B321B8A06A42EE293DD420284A647C03332238F4703348377ED96B9BA1B04547DD7109673C8702174223B13501E229C056E12B5D56E5E98DC0BDADC435474091287B8234EFD5C8493EB01879FDAC5607B60C01085DFA7A68E0AFA8EA619D4CCC39A32FF370B67950C9CDB03EB1F0977F81A2236DDAC3526C0ED667A8C4CC10B0DDEC143723BD307A33D26A12404EEE1A5FB5A6C8C59FB6657BBA0DC90F056D76B25F3601D417258461B175A58B82545B1DB4933537C93D2BA0B1B38F6DA8F2D56DC451728CA6D38A983C0D3CF876A2D8F8F7243D0309DD622384F3AF4B6A8BF9F1DF63DA52B17EF5F07231245F651CEA01DA8FF27DDD2ABA95359DCC07EFFB009293F6CD92C04329B40F4D231E99F6D706CE6F06131F849065C3C5BFBAEFDB1A6FCE68E155252997B4DF6DE41332378CA63554C4BE314851BE9051C81D2A4FFDF

9B27FE0E363ED3D5AE07BDD56AE1BFDBF8C979AAEDBAA19C244D7E4FC7C23ECAF4FD38C7EA672C67CA3DDCF275BE3DF6DD9D7CAB19B5774164C07D49CCBA656AB6CD749EE7B855F666D2AF7C9AD966F1A08B73D3AA2992130D1C670242DA87819C04E4F7D3735047C3794B09B36774936C7967E0F8AA39DAF3EA1B80E49E57534AA6536CD3223D1098ED056C328BE5FEAA4BD04CE69493FC78320877A305EE947691B924A7D903BB82BDD888A26900119206BAFFE8879ED0A7F75D17129A581A8A42D266A565727DD931ED2A53EA37BF4749F451F372CB9C92826CD1958187A2790D9F895065A6CDA02FAE586835053EEC0B1076A71D99186B611A75DF747044C637030719F84792BD164FD99A20F726142F1C9477DAFE3B394294290E13D065767C2383A11382736676D8864D6740283FC46C4DA705EDD74BD9FDE267A2D4F9A3D073E586E0FEFF77E6CD50A317E0E1546C1D3244F5BD54F3210C67F3E893F012C69ED2B1A42C39386767DF093E37CEE1E3A3047D5DEC7F39139688D65820EC0C29C3FB5B7A7E2226170FE5A636B25C636CC3B72FA528ADF79F038879F7303B9DEA9F2EB28B3D92D7DD19453AC136E68B98DAAA655621A52286807CDDB73DAD069769372317D969BAD39549704723F89C729ACD03C1E53413346DE9706EE42CDFE1FF5AF37B370EB3CAAF5AE3A9B323DAB3E162362C474F05AAB2E2224514C06A7B3965C069564C08B27216A360B3897FF8C0102116AEF791BEAF6717DD8BC40F30514937F4A7815442D825EEA4A5C5943636F5B99846E23D14B7BDCD9C94AA5AC9041D27D31CE1E65DB39CF6571C9608C9A80D6DCC767AEFE825B309E2BDCE13BC81BAE203CD30727CC2BEE37643C600CEF08BAB02348A26E3E00D21761B9F05093B9519F8207502747D07F9E0CBC1D218784301B6389C6EC9C96B9806C09AE7B84C5B092072B33123D316A19FAD21F8AA5EDFE0B395621F63DF1470360EED1C1ACB104AA03464E15EC32BAAE0FDD39C86608A73A84B47E5F5C9991345F481249973E01443E33B74BAA9C12C0D818993EB776A87E6FB04D6E7F4853AA49A9CE6E3C2A1EBCD8DAC73AF8DF28E1D1D8D48116F32C05B434A7769C7F4B9C9504F9EAFB07A05C42ABED7E4293C37AB8673AEDEFE8A6FB25D29990723C6B6E0D475A5B7422F5D75C6D4984EFD1914CCD03D2DB43A247850D1E914816D3B597B48340505C1DAF061D1A3A01FD3C29A34E065160ABBFE874306D0DD9CB1292DBF42CB84CCA4943AE569EA05E5A5116C8E0DF07B3D346BE889F9E1E222C290A17A90CFFD25C9899E22E35E6DA9BDE5AB58871EA722FB8FDF47B1129032370EC6696B0F7631B69DF47C4030339E7ABA56170C62331988EBCB7A73B9F8A226EE6D84FA7E2B9579A563AE62DF1FBDE51D7C32F84C54C0667EC67A2D602F2B3E9D6CDA3926
281200486CBA1567970F360D36DEF884B365DFEA4F01F5606DFC07BB853E1740E074411C5F70BE972F329F83D5CBAA0BFC5795E3E11BE7792F9BE90E854EAC83F5A4D0988D6F903A535E05ACC6E8E4CC002A4142CE3AABA1944AFC8AE0857E8BFA46C95FA461A44F1253D98DFA432EFAEF92A4509E2C7670908FB76D9247F8382A02CB1B3D48737E9412262F0B0C9326DE2EDF516125DAB9AB2DF13F2D11ED6DAA2D416726E7238CFCA80F39A02AF7122DA84553287C5955ECE31AF7EDDD539682DB958EC2286A77487264B040F12BCF17D55DC552839FF284D1A05BF8467466B323280C099C0A6D7A4C4B0523F945EB7A311FF499F6A34A1418A41F9E15A82CF0321AEF4CB67B376F205B05141FC8385D6315FA7BB94DF6E230115E9D50F4CD649DCCD85160E3ECE2A3CBF83B95C711D6CBB3071D80B4BE9CF805F6CA287C87D6DDA27955C44A32EDC1FF53DAE33F3CBE149B927969285505FC08EE90A3F7F2DFF829C37A47438A933A65B4530542C28D1BFF40287C0C2423C787B6676725FE14D55CB9C3321760720EDC8A939E74B7DA36A02D8EA8FF1C0A13073218877F98D21BCB56CDFDF48479B7CA0668BEB698E3BDC07BB339F239EB1AD6C0C17F7262DFE0A9864F9719861A5A6D5693896BA594A45931441D524A140704C301AA6271815DD57F35D611F757136C8453C0FE7EE2FD1C0FA23C72C67F3008D901675F46A1A24C9BAEACD6B342575A1C3DE8427E293D3B3D42EF007390AB8995F090D431C10961E049068BA6BBE3799B186552793CE9BF32FDFC01A582EDB9E3BB6DD1AE4B74F16FE4FC8B8F5D134DEF99E9DD585E33B3F98A30901BD8C51E6AAE3E0C01851E2E3BA0C9B4D526AED34B6218F98F53E505F0065897F3936FE0D133041EF57F057A2426D201578B2BF9551F3B750EA082877CA0EADB44DA3699FAEAD5A7EF58006FDB87392243E5A92FB3B196A22C8CDA0FA05A9F434DC57B1CE1802D6614CB77D6A95AED1745118AF9DC415DF65001E6630EA1BD136A6C129B7DAE4339D16CD3A9202932170630789438947331DDCF0CC8EFEC65966BFA7C7D5E683FF9A6E5E91DEF72D6FD751BCC232E0466E57A7D12EDB29A9B9C9FFBC4AF16EA052FD31FABB9002BA09E135C8EA345763D31FA96006430911783EA37D352462524340A8DF99F78C16BDF6B35E97ECB320F3D9283BABA9C16DC1743C6AF8EF2DD69496B282395C3554AB08012354CE8BEAD86AE4525414BBD6808D41E2AC98123F4C5991E0689293F8E47C29B269688B5F7D3201488112E1EC674504C6609A69565016432131D4EA0A47BCCB6E1E9FBF2EE3C17ED003EE835DD9E92D7D1FF6B82808ED6DDB4BF93F878B4CDDDAE40CA482D660D7733B3E8FCA4E71127C4921842E987675EB78DD72CEF9D657C7983C0BF466B9B58EEB9754BAE8E2683651BE325B8FF32


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAM+PingFangHK-Regular 001.003%%CreationDate: 3/22/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAM+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid31 putdup 2 /gid122 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6A1B4AE43A1CC4EAC4309216DEB726A93E1CB926F0C42A9800D5D12FD96D9E404038CBD7755C4077D09A39F7041DC52D5D940DE4888AAD72326417B52340136D9B99AF8EB284DE618D9EDBCF2C960CC7D5E218AD80F6A731A16A577181E7C597E06B894364D188D013CE83F7694CA30E1E268A9DD28B28A3666821AA6703F86EF49BDF31F797EF4D2B88C75F5693C60BE87DAE2110FF066FCFCE329EE3152F1FD7449D4F18451992C0877F1517A0E6B1E3965487904FCBF782A3CD22ADC5EA4AA6F46331E52DC6411BD769083BCD62DBC1586166FDC70ECBE17595C110307E5BA0DD1937F77944A2FB046F00258853C466EA8E5DB487839B502507F87850046907A27D6E1B7C8A9F6485A1F5F39006E50584FB18963A696EDBB3947CCB888ADB50965028D4ADC423DB1F7220441EA569DF95CF4DE68C2CD000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid122 putdup 34 /gid31 putreadonly def/$SubFontArray [/AAAAAM+PingFangHK-Regular findfont ] def/CharProcs 4 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid31 {(\001) 0 $SP} putdup /gid122 {(\002) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
q
0 0 699 137 rc
46.226463 27 m
88.9375 27 l
88.9375 8.9289885 l
46.226463 8.9289885 l
h
46.226463 27 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
-50.773537 118 m
-8.0625 118 l
-8.0625 136.07101 l
-50.773537 136.07101 l
h
-50.773537 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 67.581985 17.964495 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
(!"#$)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
88.9375 27 m
131.64853 27 l
131.64853 8.9289885 l
88.9375 8.9289885 l
h
88.9375 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
-8.0625 118 m
34.648537 118 l
34.648537 136.07101 l
-8.0625 136.07101 l
h
-8.0625 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 110.29301 17.964495 cm
-10.9065 3.8460007 m
(!"#%)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
131.64853 27 m
174.35957 27 l
174.35957 8.9289885 l
131.64853 8.9289885 l
h
131.64853 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
34.648537 118 m
77.359573 118 l
77.359573 136.07101 l
34.648537 136.07101 l
h
34.648537 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 153.00406 17.964495 cm
-10.9065 3.8460007 m
(!"#&)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
174.35957 27 m
217.0706 27 l
217.0706 8.9289885 l
174.35957 8.9289885 l
h
174.35957 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
77.359573 118 m
120.07061 118 l
120.07061 136.07101 l
77.359573 136.07101 l
h
77.359573 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 195.71509 17.964495 cm
-10.9065 3.8460007 m
(!"#')[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
217.0706 27 m
259.78165 27 l
259.78165 8.9289885 l
217.0706 8.9289885 l
h
217.0706 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
120.07061 118 m
162.78165 118 l
162.78165 136.07101 l
120.07061 136.07101 l
h
120.07061 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 238.42613 17.964495 cm
-10.9065 3.8460007 m
(!"#\()[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
302.49268 27 m
374.49268 27 l
374.49268 8.9289885 l
302.49268 8.9289885 l
h
302.49268 27 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
205.49268 118 m
277.49268 118 l
277.49268 136.07101 l
205.49268 136.07101 l
h
205.49268 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 338.49268 17.964495 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
259.78165 27 m
302.49268 27 l
302.49268 8.9289885 l
259.78165 8.9289885 l
h
259.78165 27 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
162.78165 118 m
205.49268 118 l
205.49268 136.07101 l
162.78165 136.07101 l
h
162.78165 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 281.13715 17.964495 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
(!"#\))[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
374.49268 27 m
417.2037 27 l
417.2037 8.9289885 l
374.49268 8.9289885 l
h
374.49268 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
277.49268 118 m
320.2037 118 l
320.2037 136.07101 l
277.49268 136.07101 l
h
277.49268 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 395.84821 17.964495 cm
-13.9645 3.8460007 m
(!"#%*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
545.33679 27 m
690.97723 27 l
690.97723 8.9289885 l
545.33679 8.9289885 l
h
545.33679 27 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
448.33682 118 m
593.97723 118 l
593.97723 136.07101 l
448.33682 136.07101 l
h
448.33682 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 618.15704 17.964495 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
417.2037 27 m
459.91476 27 l
459.91476 8.9289885 l
417.2037 8.9289885 l
h
417.2037 27 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
320.2037 118 m
362.91476 118 l
362.91476 136.07101 l
320.2037 136.07101 l
h
320.2037 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 438.55923 17.964495 cm
/F1.1[ 11 0 0 -11 0 0]sf
-13.9645 3.8460007 m
(!"#%$)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
459.91476 27 m
502.62579 27 l
502.62579 8.9289885 l
459.91476 8.9289885 l
h
459.91476 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
362.91476 118 m
405.62579 118 l
405.62579 136.07101 l
362.91476 136.07101 l
h
362.91476 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 481.27026 17.964495 cm
-13.9645 3.8460007 m
(!"#%%)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
502.62579 27 m
545.33679 27 l
545.33679 8.9289885 l
502.62579 8.9289885 l
h
502.62579 27 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
405.62579 118 m
448.33682 118 l
448.33682 136.07101 l
405.62579 136.07101 l
h
405.62579 118 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 523.98132 17.964495 cm
-13.9645 3.8460007 m
(!"#%&)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
263.86688 111 m
306.57794 111 l
306.57794 92.928986 l
263.86688 92.928986 l
h
263.86688 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
166.8669 34 m
209.57793 34 l
209.57793 52.071011 l
166.8669 52.071011 l
h
166.8669 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 285.22241 101.96449 cm
-10.9065 3.8460007 m
(!"#$)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
306.57794 111 m
349.28897 111 l
349.28897 92.928986 l
306.57794 92.928986 l
h
306.57794 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
209.57793 34 m
252.28897 34 l
252.28897 52.071011 l
209.57793 52.071011 l
h
209.57793 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 327.93344 101.96449 cm
-10.9065 3.8460007 m
(!"#&)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
349.28897 111 m
392 111 l
392 92.928986 l
349.28897 92.928986 l
h
349.28897 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
252.28897 34 m
295 34 l
295 52.071011 l
252.28897 52.071011 l
h
252.28897 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 370.64447 101.96449 cm
-10.9065 3.8460007 m
(!"#')[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
392 111 m
434.71103 111 l
434.71103 92.928986 l
392 92.928986 l
h
392 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
295 34 m
337.71103 34 l
337.71103 52.071011 l
295 52.071011 l
h
295 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 413.35553 101.96449 cm
-13.9645 3.8460007 m
(!"#%*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
434.71103 111 m
477.42206 111 l
477.42206 92.928986 l
434.71103 92.928986 l
h
434.71103 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
337.71103 34 m
380.42206 34 l
380.42206 52.071011 l
337.71103 52.071011 l
h
337.71103 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 456.06656 101.96449 cm
-13.9645 3.8460007 m
(!"#%$)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
477.42206 111 m
520.13312 111 l
520.13312 92.928986 l
477.42206 92.928986 l
h
477.42206 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
380.42206 34 m
423.13312 34 l
423.13312 52.071011 l
380.42206 52.071011 l
h
380.42206 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 498.77759 101.96449 cm
-13.9645 3.8460007 m
(!"#%%)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
263.86688 92.928986 m
306.57794 92.928986 l
306.57794 74.857979 l
263.86688 74.857979 l
h
263.86688 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
166.8669 52.071011 m
209.57793 52.071011 l
209.57793 70.142021 l
166.8669 70.142021 l
h
166.8669 52.071011 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 285.22241 83.893486 cm
-10.9065 3.8460007 m
(!"#%)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
306.57794 92.928986 m
349.28897 92.928986 l
349.28897 74.857979 l
306.57794 74.857979 l
h
306.57794 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
209.57793 52.071011 m
252.28897 52.071011 l
252.28897 70.142021 l
209.57793 70.142021 l
h
209.57793 52.071011 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 327.93344 83.893486 cm
-10.9065 3.8460007 m
(!"#\()[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
349.28897 92.928986 m
392 92.928986 l
392 74.857979 l
349.28897 74.857979 l
h
349.28897 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
252.28897 52.071011 m
295 52.071011 l
295 70.142021 l
252.28897 70.142021 l
h
252.28897 52.071011 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 370.64447 83.893486 cm
-10.9065 3.8460007 m
(!"#\))[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
392 92.928986 m
434.71103 92.928986 l
434.71103 74.857979 l
392 74.857979 l
h
392 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
295 52.071011 m
337.71103 52.071011 l
337.71103 70.142021 l
295 70.142021 l
h
295 52.071011 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 413.35553 83.893486 cm
-13.9645 3.8460007 m
(!"#%&)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs1 SC
0.80000001 0.80000001 0.80000001 sc
CM
46.226463 111 m
263.86688 111 l
263.86688 92.928986 l
46.226463 92.928986 l
h
46.226463 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
-50.773537 34 m
166.8669 34 l
166.8669 52.071011 l
-50.773537 52.071011 l
h
-50.773537 34 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 155.04668 101.96449 cm
/F2.1[ 10 0 0 -10 0 0]sf
-86.684998 4 m
(")s
/F1.1[ 10 0 0 -10 0 0]sf
-80.635002 4 m
(+,-./0$12+#./0$1+,-/3,#0$12+#/3,#0$4)[ 5.000000 3.150000 5.370000 2.590000 6.480000 5.000000 5.560000 2.780000 5.930000 5.000000 3.150000 2.590000 6.480000 5.000000 5.560000 2.780000 5.000000 3.150000 5.370000 6.480000 5.740000 3.330000 3.150000 5.000000 5.560000 2.780000 5.930000 5.000000 3.150000 6.480000 5.740000 3.330000 3.150000 5.000000 5.560000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
46.226463 92.928986 m
263.86688 92.928986 l
263.86688 74.857979 l
46.226463 74.857979 l
h
46.226463 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
-50.773537 52.071011 m
166.8669 52.071011 l
166.8669 70.142021 l
-50.773537 70.142021 l
h
-50.773537 52.071011 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 155.04668 83.893486 cm
/F2.1[ 10 0 0 -10 0 0]sf
-86.684998 4 m
(")s
/F1.1[ 10 0 0 -10 0 0]sf
-80.635002 4 m
(+,-./0%12+#./0%1+,-/3,#0%12+#/3,#0%4)[ 5.000000 3.150000 5.370000 2.590000 6.480000 5.000000 5.560000 2.780000 5.930000 5.000000 3.150000 2.590000 6.480000 5.000000 5.560000 2.780000 5.000000 3.150000 5.370000 6.480000 5.740000 3.330000 3.150000 5.000000 5.560000 2.780000 5.930000 5.000000 3.150000 6.480000 5.740000 3.330000 3.150000 5.000000 5.560000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 97 145 cm
-32.909088 118 m
-53.361588 106.6678 -91.295616 96.81057 -94.272728 84 c
-96.805595 73.101013 -74.036934 60.058746 -58.257187 47.609715 c
S
0 i
CM
44.790176 102.62727 m
36.778732 99.657974 l
40.706577 95.12233 l
h
44.790176 102.62727 m
f
0 J
0 j
1 0 0 -1 97 145 cm
-52.209824 42.372723 m
-60.221268 45.342026 l
-56.293423 49.87767 l
h
-52.209824 42.372723 m
S
1 J
1 j
0.60000002 i
10.840911 118 m
-16.997213 107.04655 -62.413769 95.240944 -72.681816 85.136368 c
-79.787224 78.144073 -68.316307 69.642166 -59.366154 63.607506 c
S
0 i
CM
44.577843 85.370674 m
36.144997 83.996979 l
39.127583 78.79081 l
h
44.577843 85.370674 m
f
0 J
0 j
1 0 0 -1 97 145 cm
-52.422157 59.629322 m
-60.855003 61.003021 l
-57.872417 66.20919 l
h
-52.422157 59.629322 m
S
0.80000001 0.80000001 0.80000001 sc
CM
520.13312 111 m
562.84412 111 l
562.84412 92.928986 l
520.13312 92.928986 l
h
520.13312 111 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
423.13312 34 m
465.84415 34 l
465.84415 52.071011 l
423.13312 52.071011 l
h
423.13312 34 m
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
562.84412 111 m
605.55518 111 l
605.55518 92.928986 l
562.84412 92.928986 l
h
562.84412 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
465.84415 34 m
508.55518 34 l
508.55518 52.071011 l
465.84415 52.071011 l
h
465.84415 34 m
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
605.55518 111 m
648.26624 111 l
648.26624 92.928986 l
605.55518 92.928986 l
h
605.55518 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
508.55518 34 m
551.26624 34 l
551.26624 52.071011 l
508.55518 52.071011 l
h
508.55518 34 m
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
648.26624 111 m
690.97723 111 l
690.97723 92.928986 l
648.26624 92.928986 l
h
648.26624 111 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
551.26624 34 m
593.97723 34 l
593.97723 52.071011 l
551.26624 52.071011 l
h
551.26624 34 m
S
0 i
1 1 1 sc
CM
434.71103 92.928986 m
477.42206 92.928986 l
477.42206 74.857979 l
434.71103 74.857979 l
h
434.71103 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
337.71103 52.071011 m
380.42206 52.071011 l
380.42206 70.142021 l
337.71103 70.142021 l
h
337.71103 52.071011 m
S
0 i
1 1 1 sc
CM
477.42206 92.928986 m
520.13312 92.928986 l
520.13312 74.857979 l
477.42206 74.857979 l
h
477.42206 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
380.42206 52.071011 m
423.13312 52.071011 l
423.13312 70.142021 l
380.42206 70.142021 l
h
380.42206 52.071011 m
S
0 i
1 1 1 sc
CM
520.13312 92.928986 m
562.84412 92.928986 l
562.84412 74.857979 l
520.13312 74.857979 l
h
520.13312 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
423.13312 52.071011 m
465.84415 52.071011 l
465.84415 70.142021 l
423.13312 70.142021 l
h
423.13312 52.071011 m
S
0 i
1 1 1 sc
CM
562.84412 92.928986 m
605.55518 92.928986 l
605.55518 74.857979 l
562.84412 74.857979 l
h
562.84412 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
465.84415 52.071011 m
508.55518 52.071011 l
508.55518 70.142021 l
465.84415 70.142021 l
h
465.84415 52.071011 m
S
0 i
1 1 1 sc
CM
605.55518 92.928986 m
648.26624 92.928986 l
648.26624 74.857979 l
605.55518 74.857979 l
h
605.55518 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
508.55518 52.071011 m
551.26624 52.071011 l
551.26624 70.142021 l
508.55518 70.142021 l
h
508.55518 52.071011 m
S
0 i
1 1 1 sc
CM
648.26624 92.928986 m
690.97723 92.928986 l
690.97723 74.857979 l
648.26624 74.857979 l
h
648.26624 92.928986 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 97 145 cm
551.26624 52.071011 m
593.97723 52.071011 l
593.97723 70.142021 l
551.26624 70.142021 l
h
551.26624 52.071011 m
S
[
4
4
] 0 d
159 9 m
601 9 l
601 78 l
159 78 l
h
159 9 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 477 123.5 cm
/F1.1[ 12 0 0 -12 0 0]sf
-22.115999 3.8320007 m
(/5627681)[ 7.776000 6.444000 6.672000 7.116000 2.664000 6.672000 6.888000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 97 145 cm
-56 92.535507 m
601 92.535507 l
601 144 l
-56 144 l
h
-56 92.535507 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 369.5 39.5 cm
-59.237999 3.8320007 m
(9,:;-1761<5:=165#>3,")[ 5.784000 3.996000 6.444000 9.588000 6.444000 3.336000 2.664000 6.672000 3.336000 8.220000 6.444000 6.444000 2.664000 3.336000 6.672000 6.444000 3.780000 9.096000 6.888000 3.996000 0.000000 ] xS
/Cs1 SC
63 0 0 17 502 115 cm
BI
/Width 189
/Height 51
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$b5[%mJcC<$JcEmmJcC<$JcC<$b5[%mJcC<$JcEmmJcC<$JcE^hrpp'ch>dKFrpKdYnGgZ2
JcC<$JcEpnrr)h;rW)qIj8]+Dnc8Z1pA`;8JcC<$JcF7"rkn`-r_3(erefk<rZM1?rZM4$rr;ugr]^2Z
rr2iqb5[%mJcC<$eGoLjrW)p?rc@r:reft?rh'&frr2TjrZM1?r_37ib5[%mJcC<$aT),;reg(Brr2cp
rh&c]rmLZDrq-<ls2t@ms+13$s3(HArqc]pMX:BBdea%Dht$gHrVHToT)nulb5[%mJcC<$bQ%S@qZ-VQ
m/R'MqZ-Wjo)J^gqZ-U<!WW2Bs+13Cs8M<_df//'qsOK8s3(HArqc]pMX:BB55P?ZrUU!frqc]p0*2+Q
b5[%mp](5lrau.'rZM1OrW)rT`W,r&rXe`&rj)+p!;ursrVh]RB)Y!n+T;rO!<2qJs5O(Xrqc]pMX:BB
0DbbKrU9dc0E(tN+9DNBb5[%mqZ$Qomf<@TaT)87qZ-Uhrr)TlrqlBg!8dh7hsUPrs53kUrqc]pMX:BB
0DbbKrU9dc0Db_MrVZ`pbQ!.np](6irr)hRp]/;5r`T*urr2nhp]1<Ho`"sls82]mB);T-=b6V1s8N#p
!<.lBs8F\K!<2rcs8ET,!!3-"b5[%mnc/U3qZ-UhaT)87qZ-U<rr;sNp]1<jo`+aerau$-rk!a]huE]T
qZ-VQm/R&<qZ-Woo)J^fp](?nr;cf>s+14?s8HX-!<0:Fs8K>$!<.lTs8KY-!</V\s7u]i!<2P?s53kU
rqc]pMX:BB0DbbKrUU!frqc]p&-;h2b5[%mnc/@arpIl-r_31hrmKg+r;Zcep],mFh#IBQqZ-VQm/R'7
qZ-Wmo)J^gqZ-UK!WW2Bs+14Bs8M]d!6,!5!<2QKs8;or]DDU-=b6V.s8N#p!<.lBs8K>$!<1mHs8N#p
!<.iVs8U7AJcGBBrknU5r]\F'rqQ6grr1pWr;Zb!qZ-W-JcFO*rr)]orfujMrq6-gri,Jgrp'@\rndbV
s2t@ms7H?j=o/3uWQ>,=htmEQ+Q*4ss7cTnnq$hos8)fq=m>tc=o/3is8F\N!<*Q-s2tAts8M<_df.r!
hu<E8s8Mopdf.r!oumC1!<2Qgs8M<_g&C(3pt,QFQ2:R\F5Quus8W)hp]0%Jrql]Uqq:u>l2Ub[rmLf!
rq4e@rql]CrpoX[rnm^Srh'0`p]1;7ri,n&o)J^dqZ-V-rr2fprg!?\rp'F]b5^N%rn6`?r_3=io)J^,
o`4uKm/R'7rW)q#n,NC[qZ-U,rlaj4rat<mroE)>reg%A!WW3!]DDU-=lB>Zhu5;"!<*Q/ddmG;_t=$/
MXUTEo(rFdmeHh]p%SOdp%A@aMYdDQ&GRCC!<1mHs8M]j+S#O3&H:bds2tB(s8IoQ!<0V0rr2rsqu45,
!<+,6s8L^N!<,1]rVk";!<29Ss8M]g!<+,0s8KY'!<*Q/jSo2YhtmEQ9^2TVmf#EI9_\Ve55S%Q55r1[
rrN0"r`T*urk%4jrau$-r]^>Lrr;upr_31hrk%t*rn78Nr]^>[rlb0=rp'(Sr`T*urn7)Hrg!6Yrft7u
rpKctqm-4^oDcu5l2Ub+qZ-Wgp&G$PqZ-Wdqu?ZprW)p?qu?ZKqZ-Vpo)J^,qZ-UZn,NAip]1:rp&G#`
qZ-WDi;`QPrr1gT!WW2p!<2QRs8Mur&GlJ,Q1FtS0DbbKmf*7crr)os+T)3<g%tdKWUg)a!<2E]s8L^H
!<.kMs2tB+s8ET/!<-U's8N#m!<29\s8JYi!<29\s8INF!</tgs8HX-!</VZs7cTn54\aQjSJrV53)\B
lMCS\&Dd?dncA=Pp]0RYrr2ZmrdXD:rmLZDr`T7#rh'/irp'C\rdXeFri,Sjrpogao)J]]qZ-VfUArC9
m/R(`qZ-Uup&G$ip]1<mqu?X,rZM"9p]1<So)JIbrp'(Srpogarr)Efrlb':j8]+jqZ-Uuh>[J\!OB$.
!<--cs8H0u!<+,-s8M*S!<2us&H3gIs7cTnjRrQPZMOY$9^i#Y!<1lMs2tB.s8M*S!<0n/s8KY0Q2^@O
s8Mur!</tps8LIA!:p0hp%SOdrpp*g]DDU-9^i#\lM(AYrT=.ZJ,96FTABMI=TMZ.qZ-W-m/R(Bp]1<N
m/R(Gp]1<jrW)qsqu?ZDp]0mbr_31hrj)"mreg[TrpHN\b5^i.rr)Bfr\+7lrp&tPrlb<?qu?XhqZ-V\
o)J^$qZ-UZn,NAiqZ-Vpn,NBdp]1<lk5YE6qZ-WQh>[HTq#LEbm/R&-qZ-U,l2Ub?p]1<mrlb<?qu?Xh
qZ-V\o)JIbrpK7Tr_3:krr/Ylb5^`+r]]ZKr`SLcrr)Tlrq5j^r`T*urh&ZZp]1<Yn,NB:qZ-U<k5YG[
p]1<ji;`fI!!)fpm/R(Up]1;Nl2UaJp]1<lq#C?lp]1<dp&G$Zp]0[\rW)p]TE!(6k5YESli@#Ym/R(.
qZ-U<n,N._rp'(Srpogarr2Bdp]1:Hk5YGOp]0.MriuM(quH_!m/R'jp]1<]l2U`9p]1!ermLZDrZLe3
rj)D$r_2e\rqQHmrj&0rb5^N%rqQK9rdXnYo`5!an,NANqZ-Vfo)J^^p]1<mo)J^MqZ-Uun,NCXp]1;N
k5YG/qZ-UZh>dIJ!!)osrk%Osrg!6Yrr29arqlHjrc@c4r_31hrg!'Sr_31hrj)"mrlb9@rpl]]b5^r1
qrI5Grn7&Hrnm2ErXer,rpoX[rknU5r]^5ZrqQKGqu?ZDqZ-VQn,NBZp]1<ak5YF<qZ-VQh>dERquH`e
qu?ZDrqlKjrg!?\r\*O9rk%q*roEbPrXer,rpK@Wp]1<an,NAirXbV"b5_&4r`T*ur`S^irj)D$rnm;H
rr)Tlrr)Efrau$-rj)G$rdXnIqu?Z$qZ-W5n,N@uqZ-Uuj8]*BqZ-WKi;`fEr;c`qqu?ZjrW)rNq#C>Y
qZ-UZl2U`*qZ-UZp&G$ip]1<lp&G$ip]1<mo)J^grW)qiSH$b3p&G$^p]1:Hn,NBmqZ-Woo)J^gqZ-U<
n,N@uqZ-W\qu?X,r_34hroEqVroEYMrmLQArqPORp]1<ai;`eKr;Ziu!<--us8KY0!<2Zds8J;\!<.K7
s8LIA!<2Q^s8N#p!<+,3s8N#p!<+Y?s8J;_!<2b`s2tB7s8LpN!</tds8G4]!<--is8Muo!<+YBs8KY*
!<2rrs8M]j!<0V-s8MH`!<1F;s7cTnZK(uaq"Ojgro!hUQ2L[`!!*#1qu?XKrW)WkrpKX`rXePurq6$d
rk%b$rr)Tlo)J^,qZ-UKo)J^^rW)q0RK(G0p&G$gqZ-WKn,NBPqZ-Wjm/Qh\p&G$Vo`4mhrdXnIrqlKj
rZM1?r]^#Tr]^2ZrfuFArnmSQr\*+-rh',h!<<-!lMgh_o)8XgMXpfH55P?ZjRrQPp%SOd]BoRs0DbbK
meHh]rUg0iq"=[d&H2\/qjIK,s763hF8c1=B)_B#rql`pjSgh0!<2QRs8Kq5!<-U-s8L4@!;do9!<2Qg
g&;!NB(c3'jSJrVWW)qsq#3JS!</tRs8JYf!<.l3s8MHb!!*'"rdXqIr\+6Nrql9drr)Tlrn7;Nrr2o/
p]1<Nl2UbNp]1<Yrr;umrXf&/ri,bprZM45rr;ujrZM1?rl^W-b5^r1ri,5arefY6ri,Ggr_3=jrr;sN
p]1:9n,NC?nc8YBrpJM?r_31hrn6$*rjr.1p&P*?m/R(`r_2b\rfuFArp'Ionc8[Hrr;uGmf<@EPQ/f*
l2UbRrnm_'rlb;urr1XOrr2oXqpPK7p&G$ZqpOa/rr2oXrmLf!rq4e@rXer,rqk=I!;cfoqu5:JbPq(m
s8Murhu;('g&CEhs8M]jhttk$rUp3imf(o=df/<es2t@ms1A=1qtgBm0@TrPs+13ms+13ms8MfmJ,XNg
mf*7cg%tdKZIAi)s+13ms+13ms7cTn55tT]J,96FqpYRrs+13ms+13ps8MH]!<+YNs8)fqMU;BSs+13m
s+13ps8M]d!<2QgTDJW5s+13$s2t@ms2tB@55P?ZJ,96Fp!*Mfs+13ms+13js8KY09`?^EF8l'Zs+13$
s2t@ms+13$s+13ms+13$s+13$s2t@ms+13$s+13ms+13$s+13$s2t@l
~> %APLeod
EI
ep
end
