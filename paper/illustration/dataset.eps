%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 624.000000 236.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 624 236
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 624 236
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /t put
dup 35 /e put
dup 36 /p put
dup 37 /equal put
dup 38 /one put
dup 39 /k put
dup 40 /two put
dup 41 /three put
dup 42 /zero put
dup 43 /seven put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




0200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/zero 1 def
/one 2 def
/two 3 def
/three 4 def
/seven 5 def
/equal 6 def
/e 7 def
/k 8 def
/p 9 def
/s 10 def
/t 11 def
/uni2B91 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B71CCBEC8DADBFCB2CF6F614DCF0404E4678133CDA654CD39ADC4A8B797ECD8A92D182D8DBCA967150160D16E975F5B080F550B936C998F0900FAA838BB4FA8A605EE3D9B697B5992B84A707930BBFAC641C413719B086308DFB64E361C63298B24216300947AB2E631CCA87A8F285D14621124E1971136D08148E99FB8A61CF20928CC2838CA1B06376F0C9F750355959A6FD071774E18FB3D2C7099E25C499235BD3EC16A66D8863C8B97024BCFFDBB25B6E0F4B04229F899EBB1A30E756B7872E719A71C6D0E64054BF47B6E97A8546C5D8C96EB0B87B7746AC29C581B2639CCA48B5119E470E1234E5158525D2ADBDE90F5E7AA0C3B4E4FF28AEAC29F493A0587BE3FAC23A6B692988EE2D872D7D7C7A4CB75C01DC7CD45B4120FC545B08C64F1A9D811A6EEDA868D80098ED03CD3907EAC536C7B24FF3AC90152E532C6B3AC67401BC3308884A1F6C0E67327DC2C4E69CAE87976E4A705C78DE1B0A898B7933C1605A141C3125688456977A04C1702507CBF3ED0BCA8BE08007B76899EAFDAECF9F2AB1DCD75B8E45CB687DC2FA51F8668B381B9A07F0FABAF8C3278B4A431168B878D12E253B48357E4353080C6F9D30B33B31C9715A88F1F0CA3AA8256366C8136A9883E0A765016E98CC35725503713DA0795828626848D4CC7895B860ECB55B77289E6774228271A1A6AF3F6A713FE07370C176227DC66E8B13771F36D983C38F69E693E74C73CCA28322A70129F23A7209DDADE72859615E1B0328
D27F99EA86505840729119F3F5FFFC6EBE1370EC935DE8969B262BE2E3A3461737B313F727FCCE443CFEA543ED744BFDB4D668770E1EAB6E7FE0248529B88F61716DACC3A0DE00D2174B10114820846A54F5EAC76095AA197FCD8265BE6AACAD03DCD12488B65E9911B82057C9566820BA5FD97917BFAAA5FD8A8B21F369DC15675395648323D5460E20E6EABBAFC91F4C82A0BD43F7BB3DF6AED41E7EDD65EFA7EF292DFF30321A403DA850B636BB50FC7AA0EC25EABF1B07C20A70928C92A26231076DE6F6CDFD852639044B43A2EC5949B4365042BBEBA0CC0C947D062677DA123347D911ED09DFD1E5898A2E67D270CE6D09D8DC502FB17BD36E40274C0B18E47EE7AE22D13667D90C0985E33D4D086457761008F037BC4B8EACD809D47C86D1125491645E6AF3D9056DC07984785F7B5A022A50D715AA00E766DAC99D55D8461CEBC907A16D1870C498B0601B4FCD59C714A3A556D0E141AC423F5DAF364824F667391DBE3F90CBF3952A4C6EC89C8DEBC8D9C6724E754A6C5B384454C4C060D930C8D387BBCF04D80CABB656E0A4BFF08D707DB7922E343E2E8CA396466B36018A5E8FF293155991536E440A57C86D1CE64CF1454D43FFAAFDB3179755488986448715810A6491D096C86100A3158BF7AC478EDA58122931A371D12BFCA540D862A29C62F7D7B3AA1CCA05FA8624CD338DC23080DECD8ABEBE114B2AFFACBF4FC43063E87EED75B3B1180C3BD463FDC10A356CF89501FB0B42C646F8F8D03B60CE2E10FCC5768F0F7442371F555F484A16B00DD8E2B2E6916E5D58DE1BEAD982C109B6545E8CBEDE0C1E10486729DB7AFF33704391C87376548E69653EDE25453E2521F4ED04171C98F61F4D6C280C5CED48918D4546BF9F8A96300A2AA6080C4B811CF7C22A404ACF6BB7831807CAAE4B31FD4B797CF46F1BC01EB8D0C53628A525C55ADAA337C253D8E44FEC30E1C8D4D14BBF413CC022CEB29C71A8B217811CCFFB968C34E6332A0F84BA182E4ED2A3A95046325C97F7181CEF41A8E5C326FD69A6D8A71C199C4694DCED1F1CCA950065A09A6A4278C27ED1B9135CEF71C3472B005ED3F760E216227AD9D54FBB589201DED12CBD4ACAFB877D952153E8D2A48F55CC97EC6929C1E0962AAB4052DAE5433E8B64DCF337B0E978A07FA9401C4F2D9B5D544EF25D9E35862840E3C611BB4F2C8E15908687977D9569045CCFC568EE9BAFA15C08B0086F875B067D7A57EB79EA030668070FC3E5223B61C2E1CEC0AD73AA807853874D7F2565A14306D6B9FCB3056A651033D140EB5F0458DE6BFFB73ADEEA5E6B37482B77CE84084B64BA8106DC4AD9370D033DCF79B276840F87A2D0B3843A36B7117B7A0EDE0CCA1DE0ACA3B03A070FE66F1205FD5C3B8CB62C339EA51B6917D8DDBA7588648CBBC1B1980D60A7B462A59F47262C4C
D69FC44E47DC93F57FB1A6C0EE2FD1251C12A7520C5ADF9AE4AFAAC52174C06325ADE1FD7C297330040006FFE17A7B33A7E42A5CEB011D29270A85A9A97E56B41FA0EB867D1B2842B66F48024DDAB8C62F542B6F27314C42FB4907D92412616FB46A27B43903B9EDFEFD136FC0928538B5FFB5DD9107C0988B5ECA5C936E5F76BFC3B8CD381F4EC1B1B822F41B34947362488F1434062B305644218E6A54CE4B3140E664B7ADB20B67BC8E5D8A43007980A088FBC5E066AF290F9E03BC832C3CBD966FC12AFB2079CEEB541798A912464E25BA90FD4C01930600611D038567DC3BBE8CE01C5933EA281EE25E2E6A67462E53D407EED19EB5F2247E933FD79209492693F4C5583E99861C6D8F8CCCF2012C76E739952EC3A2BA9238AF6D74A1F2725F56A614601B4837E937037E8A64DF030D263CBAE0D52BC7FC33F3249A0290D22D3F70BBC8A582A009114D0EC13A4BC5C8B9237868A2D77AC6AF3704AE71A2B5AA4CE553852D85A9502855373A8539C3F10EC791D48F63245D7BC30593FCADA2F7B71656C39E6CD081AD043A33CE9B439B9CF8D03E9D4ADF71B4BC3FDE2B677C2083C59907CE4D592B19050CCF75A10B5A929B87427D39C7BB4E1B6D73097F04A77378E32672A71187F6D28D1FCA320425073F5CC25915543146D35513922BF48EEFB52AC0A59C73500A26B9BE4EC133A866243EEE899695E5F12126F22997F46CB47C4AF41603ECA2B4E441D969BAD4DD250F84344116F30A230E1C2D26ECFB55F576085F450C0EBFC09AF169F6D1C7C28B809FB0C8B2685322F808731BC0E3C0E941550BB4702810B2ED61C7D0A92801AFF6744A0C35D156CA05AE2F6C61286D11C0966C72BB594E8B32DE027D52DE683EA45137D11450248DAC231E6C6A19F7ABE41DB8CE089B88312F9D521A6B310D2E3542D843DF3479A1939421234EB37573D04C9B8B3930A172DA5973053183E79A6D8DC71A623750EC6C4AD40A0E927D122256808A1BC8B38FD186E40C9C75741C01D463D4C5EBDD4CFE1BB24D72BC10D016C91DB3F7BDCEFAF19134E0B20824B1EB3147FFE72C46ACDB67756B3F2F90EE84EBC98EAD60983B21CFFF33840F1D86B304C0CC3411ADD19BDCD8EAF019B99CD181BF5CD96D3FC4AC7EAF23A1072713A491592E80236E7F95C6F8BB81E5E7E3191A1CC0CB73FE20A99044C23152B64CB6D63E7F3DD39B54F6827B5883E19BD467EE0B678128E648CC5CE5385AF8539995F5C54387379DE19D0C15FE556ADD80009E46797F5C8C184326B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAJ+PingFangHK-Regular 001.003%%CreationDate: 5/6/18% Copyright 2018 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAJ+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid122 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6B2A850047E28F2EC3A8AB6733DC128B32EBF55D51344783C54485DD84408EEC4830388A4B3C72489FDD16548C8D6C33FA6519015DDDEF46F2A8D897BBA30D3EB61E975F2AFD224E65F3F2CE25CB103919C95EFBCEA7FBDD4A4FB2D156630B68DADF900367CB6EA5F5566631ED32E83AB9E99485FDBBD596F695AC86971DB1647A8AC61AECFFB228F990DC0CD79B00A3D9E757E6AA0FEAF88F1CA0CF0335AB14E59C81587917242647C3C1623C6F4736FC42239842E9C4D888368CFD32353368D80BF1B84AF440B4AB6F82A388854B84C423FDC057018CBA20C4AAF8986251F795F4ED4FFAABE2E386EB48382E5FCBF3C306EDA9DBEB08FA367325413C9800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid122 putreadonly def/$SubFontArray [/AAAAAJ+PingFangHK-Regular findfont ] def/CharProcs 3 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid122 {(\001) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 624 236 rc
0 236 m
624 236 l
624 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-767 1158 m
1315 1158 l
1315 -552 l
-767 -552 l
h
-767 1158 m
f
/Cs1 SC
0 sc
1 0 0 -1 26.742287 192.19141 cm
/F1.1[ 7 0 0 -7 0 0]sf
-10.8535 2.9020004 m
(!"#$%&)[ 3.500000 2.205000 3.759000 4.151000 4.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
10 230.5 m
52.711037 230.5 l
52.711037 212.42899 l
10 212.42899 l
h
10 230.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
86 375.5 m
128.71103 375.5 l
128.71103 393.57101 l
86 393.57101 l
h
86 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 31.355518 221.46449 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"&)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
138.1331 230.5 m
210.1331 230.5 l
210.1331 212.42899 l
138.1331 212.42899 l
h
138.1331 230.5 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
214.1331 375.5 m
286.13312 375.5 l
286.13312 393.57101 l
214.1331 393.57101 l
h
214.1331 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 174.1331 221.46449 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
52.711037 230.5 m
95.422073 230.5 l
95.422073 212.42899 l
52.711037 212.42899 l
h
52.711037 230.5 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
128.71103 375.5 m
171.42207 375.5 l
171.42207 393.57101 l
128.71103 393.57101 l
h
128.71103 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 74.066551 221.46449 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"\()[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
95.422073 230.5 m
138.1331 230.5 l
138.1331 212.42899 l
95.422073 212.42899 l
h
95.422073 230.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
171.42207 375.5 m
214.1331 375.5 l
214.1331 393.57101 l
171.42207 393.57101 l
h
171.42207 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 116.77759 221.46449 cm
-10.9065 3.8460007 m
($'"\))[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
210.1331 230.5 m
252.84415 230.5 l
252.84415 212.42899 l
210.1331 212.42899 l
h
210.1331 230.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
286.13312 375.5 m
328.84415 375.5 l
328.84415 393.57101 l
286.13312 393.57101 l
h
286.13312 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 231.48863 221.46449 cm
-13.9645 3.8460007 m
($'"&*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
252.84415 230.5 m
295.55518 230.5 l
295.55518 212.42899 l
252.84415 212.42899 l
h
252.84415 230.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
328.84415 375.5 m
371.55518 375.5 l
371.55518 393.57101 l
328.84415 393.57101 l
h
328.84415 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 274.19965 221.46449 cm
-13.9645 3.8460007 m
($'"&&)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
380.97726 230.5 m
452.97726 230.5 l
452.97726 212.42899 l
380.97726 212.42899 l
h
380.97726 230.5 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
456.97726 375.5 m
528.97723 375.5 l
528.97723 393.57101 l
456.97726 393.57101 l
h
456.97726 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 416.97726 221.46449 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
295.55518 230.5 m
338.2662 230.5 l
338.2662 212.42899 l
295.55518 212.42899 l
h
295.55518 230.5 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
371.55518 375.5 m
414.2662 375.5 l
414.2662 393.57101 l
371.55518 393.57101 l
h
371.55518 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 316.91071 221.46449 cm
/F1.1[ 11 0 0 -11 0 0]sf
-13.9645 3.8460007 m
($'"&\()[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
338.2662 230.5 m
380.97726 230.5 l
380.97726 212.42899 l
338.2662 212.42899 l
h
338.2662 230.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
414.2662 375.5 m
456.97726 375.5 l
456.97726 393.57101 l
414.2662 393.57101 l
h
414.2662 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 359.62173 221.46449 cm
-13.9645 3.8460007 m
($'"&\))[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
452.97726 230.5 m
495.68829 230.5 l
495.68829 212.42899 l
452.97726 212.42899 l
h
452.97726 230.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
528.97723 375.5 m
571.68829 375.5 l
571.68829 393.57101 l
528.97723 393.57101 l
h
528.97723 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 474.33276 221.46449 cm
-13.9645 3.8460007 m
($'"\(*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
495.68829 230.5 m
623 230.5 l
623 212.42899 l
495.68829 212.42899 l
h
495.68829 230.5 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
571.68829 375.5 m
699 375.5 l
699 393.57101 l
571.68829 393.57101 l
h
571.68829 375.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 559.34412 221.46449 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -76 606 cm
124.38311 370.5 m
375.88312 370.5 l
375.88312 398 l
124.38311 398 l
h
124.38311 370.5 m
S
86 409.5 m
118.48321 409.3533 l
S
0 i
CM
50.483128 196.68283 m
42.469662 199.64667 l
42.496758 193.64673 l
h
50.483128 196.68283 m
f
0 J
0 j
1 0 0 -1 -76 606 cm
126.48312 409.31717 m
118.46966 406.35333 l
118.49676 412.35327 l
h
126.48312 409.31717 m
S
1 J
1 j
0.60000002 i
86 404.30859 m
86 414.16116 l
86 415.30859 l
S
127.38311 404.30859 m
127.38311 414.16116 l
127.38311 415.30859 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 95.648537 133.36879 cm
/F1.1[ 7 0 0 -7 0 0]sf
-10.8535 2.9020004 m
(!"#$%\()[ 3.500000 2.205000 3.759000 4.151000 4.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
10.226464 171.38281 m
52.9375 171.38281 l
52.9375 153.3118 l
10.226464 153.3118 l
h
10.226464 171.38281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
86.226463 434.61719 m
128.9375 434.61719 l
128.9375 452.6882 l
86.226463 452.6882 l
h
86.226463 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 31.581982 162.34731 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"&)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
138.35957 171.38281 m
210.35957 171.38281 l
210.35957 153.3118 l
138.35957 153.3118 l
h
138.35957 171.38281 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
214.35957 434.61719 m
286.35956 434.61719 l
286.35956 452.6882 l
214.35957 452.6882 l
h
214.35957 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 174.35957 162.34731 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
52.9375 171.38281 m
95.648537 171.38281 l
95.648537 153.3118 l
52.9375 153.3118 l
h
52.9375 171.38281 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
128.9375 434.61719 m
171.64853 434.61719 l
171.64853 452.6882 l
128.9375 452.6882 l
h
128.9375 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 74.293015 162.34731 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"\()[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
95.648537 171.38281 m
138.35957 171.38281 l
138.35957 153.3118 l
95.648537 153.3118 l
h
95.648537 171.38281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
171.64853 434.61719 m
214.35957 434.61719 l
214.35957 452.6882 l
171.64853 452.6882 l
h
171.64853 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 117.00405 162.34731 cm
-10.9065 3.8460007 m
($'"\))[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
210.35957 171.38281 m
253.0706 171.38281 l
253.0706 153.3118 l
210.35957 153.3118 l
h
210.35957 171.38281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
286.35956 434.61719 m
329.07062 434.61719 l
329.07062 452.6882 l
286.35956 452.6882 l
h
286.35956 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 231.71509 162.34731 cm
-13.9645 3.8460007 m
($'"&*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
253.0706 171.38281 m
295.78165 171.38281 l
295.78165 153.3118 l
253.0706 153.3118 l
h
253.0706 171.38281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
329.07062 434.61719 m
371.78165 434.61719 l
371.78165 452.6882 l
329.07062 452.6882 l
h
329.07062 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 274.42612 162.34731 cm
-13.9645 3.8460007 m
($'"&&)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
381.2037 171.38281 m
453.2037 171.38281 l
453.2037 153.3118 l
381.2037 153.3118 l
h
381.2037 171.38281 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
457.2037 434.61719 m
529.20374 434.61719 l
529.20374 452.6882 l
457.2037 452.6882 l
h
457.2037 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 417.2037 162.34731 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
295.78165 171.38281 m
338.49268 171.38281 l
338.49268 153.3118 l
295.78165 153.3118 l
h
295.78165 171.38281 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
371.78165 434.61719 m
414.49268 434.61719 l
414.49268 452.6882 l
371.78165 452.6882 l
h
371.78165 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 317.13715 162.34731 cm
/F1.1[ 11 0 0 -11 0 0]sf
-13.9645 3.8460007 m
($'"&\()[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
338.49268 171.38281 m
381.2037 171.38281 l
381.2037 153.3118 l
338.49268 153.3118 l
h
338.49268 171.38281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
414.49268 434.61719 m
457.2037 434.61719 l
457.2037 452.6882 l
414.49268 452.6882 l
h
414.49268 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 359.84821 162.34731 cm
-13.9645 3.8460007 m
($'"&\))[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
453.2037 171.38281 m
495.91476 171.38281 l
495.91476 153.3118 l
453.2037 153.3118 l
h
453.2037 171.38281 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
529.20374 434.61719 m
571.91473 434.61719 l
571.91473 452.6882 l
529.20374 452.6882 l
h
529.20374 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 474.55923 162.34731 cm
-13.9645 3.8460007 m
($'"\(*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
495.91476 171.38281 m
623.22644 171.38281 l
623.22644 153.3118 l
495.91476 153.3118 l
h
495.91476 171.38281 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
571.91473 434.61719 m
699.22644 434.61719 l
699.22644 452.6882 l
571.91473 452.6882 l
h
571.91473 434.61719 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 559.57062 162.34731 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -76 606 cm
210 429.61719 m
461.5 429.61719 l
461.5 457.11719 l
210 457.11719 l
h
210 429.61719 m
S
128.9375 468.3226 m
203.45984 467.7778 l
S
0 i
CM
135.45963 138.28069 m
127.4379 141.22212 l
127.48177 135.22227 l
h
135.45963 138.28069 m
f
0 J
0 j
1 0 0 -1 -76 606 cm
211.45963 467.71933 m
203.43791 464.77789 l
203.48177 470.77771 l
h
211.45963 467.71933 m
S
1 J
1 j
0.60000002 i
128.9375 463.1312 m
128.9375 472.9838 l
128.9375 474.1312 l
S
213.35957 463.1312 m
213.35957 472.9838 l
213.35957 474.1312 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 273.8129 11.708079 cm
/F1.1[ 7 0 0 -7 0 0]sf
-10.8535 2.9020004 m
(!"#$%\))[ 3.500000 2.205000 3.759000 4.151000 4.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
10 56.754257 m
52.711037 56.754257 l
52.711037 38.683243 l
10 38.683243 l
h
10 56.754257 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
86 549.24573 m
128.71103 549.24573 l
128.71103 567.31677 l
86 567.31677 l
h
86 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 31.355518 47.71875 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"&)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
138.1331 56.754257 m
210.1331 56.754257 l
210.1331 38.683243 l
138.1331 38.683243 l
h
138.1331 56.754257 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
214.1331 549.24573 m
286.13312 549.24573 l
286.13312 567.31677 l
214.1331 567.31677 l
h
214.1331 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 174.1331 47.71875 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
52.711037 56.754257 m
95.422073 56.754257 l
95.422073 38.683243 l
52.711037 38.683243 l
h
52.711037 56.754257 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
128.71103 549.24573 m
171.42207 549.24573 l
171.42207 567.31677 l
128.71103 567.31677 l
h
128.71103 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 74.066551 47.71875 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"\()[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
95.422073 56.754257 m
138.1331 56.754257 l
138.1331 38.683243 l
95.422073 38.683243 l
h
95.422073 56.754257 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
171.42207 549.24573 m
214.1331 549.24573 l
214.1331 567.31677 l
171.42207 567.31677 l
h
171.42207 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 116.77759 47.71875 cm
-10.9065 3.8460007 m
($'"\))[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
210.1331 56.754257 m
252.84415 56.754257 l
252.84415 38.683243 l
210.1331 38.683243 l
h
210.1331 56.754257 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
286.13312 549.24573 m
328.84415 549.24573 l
328.84415 567.31677 l
286.13312 567.31677 l
h
286.13312 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 231.48863 47.71875 cm
-13.9645 3.8460007 m
($'"&*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
252.84415 56.754257 m
295.55518 56.754257 l
295.55518 38.683243 l
252.84415 38.683243 l
h
252.84415 56.754257 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
328.84415 549.24573 m
371.55518 549.24573 l
371.55518 567.31677 l
328.84415 567.31677 l
h
328.84415 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 274.19965 47.71875 cm
-13.9645 3.8460007 m
($'"&&)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
380.97726 56.754257 m
452.97726 56.754257 l
452.97726 38.683243 l
380.97726 38.683243 l
h
380.97726 56.754257 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
456.97726 549.24573 m
528.97723 549.24573 l
528.97723 567.31677 l
456.97726 567.31677 l
h
456.97726 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 416.97726 47.71875 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
295.55518 56.754257 m
338.2662 56.754257 l
338.2662 38.683243 l
295.55518 38.683243 l
h
295.55518 56.754257 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
371.55518 549.24573 m
414.2662 549.24573 l
414.2662 567.31677 l
371.55518 567.31677 l
h
371.55518 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 316.91071 47.71875 cm
/F1.1[ 11 0 0 -11 0 0]sf
-13.9645 3.8460007 m
($'"&\()[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
338.2662 56.754257 m
380.97726 56.754257 l
380.97726 38.683243 l
338.2662 38.683243 l
h
338.2662 56.754257 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
414.2662 549.24573 m
456.97726 549.24573 l
456.97726 567.31677 l
414.2662 567.31677 l
h
414.2662 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 359.62173 47.71875 cm
-13.9645 3.8460007 m
($'"&\))[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
452.97726 56.754257 m
495.68829 56.754257 l
495.68829 38.683243 l
452.97726 38.683243 l
h
452.97726 56.754257 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
528.97723 549.24573 m
571.68829 549.24573 l
571.68829 567.31677 l
528.97723 567.31677 l
h
528.97723 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 474.33276 47.71875 cm
-13.9645 3.8460007 m
($'"\(*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
495.68829 56.754257 m
623 56.754257 l
623 38.683243 l
495.68829 38.683243 l
h
495.68829 56.754257 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
571.68829 549.24573 m
699 549.24573 l
699 567.31677 l
571.68829 567.31677 l
h
571.68829 549.24573 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 559.34412 47.71875 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -76 606 cm
409.5 544.53125 m
661 544.53125 l
661 572.03125 l
409.5 572.03125 l
h
409.5 544.53125 m
S
286.13312 589 m
403.59271 589.33771 l
S
0 i
CM
335.59268 16.639322 m
327.60135 19.66231 l
327.58411 13.662333 l
h
335.59268 16.639322 m
f
0 J
0 j
1 0 0 -1 -76 606 cm
411.59268 589.36066 m
403.60135 586.33771 l
403.58411 592.33765 l
h
411.59268 589.36066 m
S
1 J
1 j
0.60000002 i
286.13312 584.79193 m
286.13312 594.64447 l
286.13312 595.79193 l
S
413.49268 584.79193 m
413.49268 594.64447 l
413.49268 595.79193 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 172.06656 75.33416 cm
/F1.1[ 7 0 0 -7 0 0]sf
-10.8535 -1.0979996 m
(!"#$%+)[ 3.500000 2.205000 3.759000 4.151000 4.200000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
10 116.42578 m
52.711037 116.42578 l
52.711037 98.354767 l
10 98.354767 l
h
10 116.42578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
86 489.57422 m
128.71103 489.57422 l
128.71103 507.64523 l
86 507.64523 l
h
86 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 31.355518 107.39027 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"&)[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
138.1331 116.42578 m
210.1331 116.42578 l
210.1331 98.354767 l
138.1331 98.354767 l
h
138.1331 116.42578 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
214.1331 489.57422 m
286.13312 489.57422 l
286.13312 507.64523 l
214.1331 507.64523 l
h
214.1331 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 174.1331 107.39027 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
52.711037 116.42578 m
95.422073 116.42578 l
95.422073 98.354767 l
52.711037 98.354767 l
h
52.711037 116.42578 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
128.71103 489.57422 m
171.42207 489.57422 l
171.42207 507.64523 l
128.71103 507.64523 l
h
128.71103 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 74.066551 107.39027 cm
/F1.1[ 11 0 0 -11 0 0]sf
-10.9065 3.8460007 m
($'"\()[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
95.422073 116.42578 m
138.1331 116.42578 l
138.1331 98.354767 l
95.422073 98.354767 l
h
95.422073 116.42578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
171.42207 489.57422 m
214.1331 489.57422 l
214.1331 507.64523 l
171.42207 507.64523 l
h
171.42207 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 116.77759 107.39027 cm
-10.9065 3.8460007 m
($'"\))[ 6.523000 5.709000 3.465000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
210.1331 116.42578 m
252.84415 116.42578 l
252.84415 98.354767 l
210.1331 98.354767 l
h
210.1331 116.42578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
286.13312 489.57422 m
328.84415 489.57422 l
328.84415 507.64523 l
286.13312 507.64523 l
h
286.13312 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 231.48863 107.39027 cm
-13.9645 3.8460007 m
($'"&*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
252.84415 116.42578 m
295.55518 116.42578 l
295.55518 98.354767 l
252.84415 98.354767 l
h
252.84415 116.42578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
328.84415 489.57422 m
371.55518 489.57422 l
371.55518 507.64523 l
328.84415 507.64523 l
h
328.84415 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 274.19965 107.39027 cm
-13.9645 3.8460007 m
($'"&&)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
380.97726 116.42578 m
452.97726 116.42578 l
452.97726 98.354767 l
380.97726 98.354767 l
h
380.97726 116.42578 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
456.97726 489.57422 m
528.97723 489.57422 l
528.97723 507.64523 l
456.97726 507.64523 l
h
456.97726 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 416.97726 107.39027 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
295.55518 116.42578 m
338.2662 116.42578 l
338.2662 98.354767 l
295.55518 98.354767 l
h
295.55518 116.42578 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
371.55518 489.57422 m
414.2662 489.57422 l
414.2662 507.64523 l
371.55518 507.64523 l
h
371.55518 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 316.91071 107.39027 cm
/F1.1[ 11 0 0 -11 0 0]sf
-13.9645 3.8460007 m
($'"&\()[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
338.2662 116.42578 m
380.97726 116.42578 l
380.97726 98.354767 l
338.2662 98.354767 l
h
338.2662 116.42578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
414.2662 489.57422 m
456.97726 489.57422 l
456.97726 507.64523 l
414.2662 507.64523 l
h
414.2662 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 359.62173 107.39027 cm
-13.9645 3.8460007 m
($'"&\))[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
452.97726 116.42578 m
495.68829 116.42578 l
495.68829 98.354767 l
452.97726 98.354767 l
h
452.97726 116.42578 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
528.97723 489.57422 m
571.68829 489.57422 l
571.68829 507.64523 l
528.97723 507.64523 l
h
528.97723 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 474.33276 107.39027 cm
-13.9645 3.8460007 m
($'"\(*)[ 6.523000 5.709000 3.465000 6.116000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
495.68829 116.42578 m
623 116.42578 l
623 98.354767 l
495.68829 98.354767 l
h
495.68829 116.42578 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -76 606 cm
571.68829 489.57422 m
699 489.57422 l
699 507.64523 l
571.68829 507.64523 l
h
571.68829 489.57422 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 559.34412 107.39027 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12 6 m
(!!!)[ 8.000000 8.000000 0.000000 ] xS
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -76 606 cm
281.5 484.85971 m
533 484.85971 l
533 512.35974 l
281.5 512.35974 l
h
281.5 484.85971 m
S
214.35957 522 m
275.23318 521.77643 l
S
0 i
CM
207.23312 84.25296 m
199.22215 87.223557 l
199.24419 81.223602 l
h
207.23312 84.25296 m
f
0 J
0 j
1 0 0 -1 -76 606 cm
283.23312 521.74701 m
275.22217 518.77643 l
275.2442 524.77643 l
h
283.23312 521.74701 m
S
1 J
1 j
0.60000002 i
214.1331 515.08826 m
214.1331 524.9408 l
214.1331 526.08826 l
S
285.13312 517.16583 m
285.13312 527.01843 l
285.13312 528.16583 l
S
ep
end
%%Trailer
%%EOF
